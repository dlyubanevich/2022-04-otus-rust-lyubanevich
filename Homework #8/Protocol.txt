pub fn send_f32(socket: &mut UdpSocket, address: impl ToSocketAddrs, data: f32) -> SendResult {
    let bytes = data.to_be_bytes();
    let len = bytes.len() as u16;
    let len_bytes = len.to_be_bytes();
    socket.send_to(&len_bytes, address)?;
    socket.send_to(&bytes, address)?;
    Ok(())
}

pub fn receive_f32(socket: &mut UdpSocket) -> ReceiveResult<f32> {
    let mut buffer = [0; 2];
    socket.recv(&mut buffer)?;
    let len = u16::from_be_bytes(buffer); // Что мне делать с длинной данных?

    let mut buffer = [0; 4];
    socket.recv(&mut buffer)?;
    Ok(f32::from_be_bytes(buffer))
}
